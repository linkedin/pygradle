/*
 * Copyright 2016 LinkedIn Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'groovy'
    id 'idea'
    id 'application'
    id "com.github.jk1.dependency-license-report" version "0.3.4"
    id "com.github.hierynomus.license" version "0.13.1"
}

apply from: "$rootDir/gradle/code-quality.gradle"

mainClassName = 'com.linkedin.python.importer.ImporterCLI'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.5'
    compile 'org.apache.httpcomponents:fluent-hc:4.5.1'
    compile 'commons-cli:commons-cli:1.3.1'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'org.apache.commons:commons-compress:1.10'
    compile 'commons-io:commons-io:2.4'
}

task setupTestingIvyRepo

def getIvyRepo() {
    return file("${rootProject.getBuildDir()}/ivy-repo")
}

task importRequiredDependencies(type: JavaExec) { task ->
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.linkedin.python.importer.ImporterCLI'

    def replacements = ['alabaster:0.7=alabaster:0.7.1', 'pytz:0a=pytz:2016.4', 'Babel:0.8=Babel:1.0',
                        'sphinx_rtd_theme:0.1=sphinx_rtd_theme:0.1.1'].join(",")
    def packagesToInclude = ['virtualenv:15.0.1', 'pip:7.1.2', 'setuptools:19.1.1', 'setuptools-git:1.1',
                             'flake8:2.4.0', 'flake8:2.5.4', 'pytest:2.9.1', 'pytest-cov:2.2.1', 'pytest-xdist:1.14',
                             'wheel:0.26.0', 'pbr:1.8.0', 'Sphinx:1.4.1', 'six:1.10.0', 'pex:1.1.4',
                             'requests:2.10.0', 'Flask:0.11.1'].join(" ")
    args "--repo ${getIvyRepo().absolutePath} $packagesToInclude --replace $replacements".split(' ')

    outputs.dir(getIvyRepo())
    inputs.property('packages', packagesToInclude)
    setupTestingIvyRepo.dependsOn(task)

    doFirst {
        file(getIvyRepo()).mkdir()
    }
}

license {
    header rootProject.file('codequality/HEADER')
    exclude '**/*.template'
}

licenseReport {
    configurations = ['compile', 'testCompile']
}
